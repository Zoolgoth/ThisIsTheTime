// --- Main.java ---
package academy.learnprograming;

public class Main {

    public static void main(String[] args) {

        Player tim = new Player("Tim", 6, 120);
        System.out.println(tim);
        Monster dog = new Monster("pluto", 1, 60);
        System.out.println(dog);

    }
}

// --- interface ISaveable --- 
package academy.learnprograming;

import java.util.ArrayList;
import java.util.List;

public interface ISaveable {

    List<String> write();
    void read (List<String> list) ;

}

// --- Monster.java --- 

package academy.learnprograming;

import java.util.ArrayList;
import java.util.List;

public class Monster implements ISaveable {
    private String name;
    private int strength;
    private int hitPoints;

    public Monster(String name, int strength, int hitPoints) {
        this.name = name;
        this.strength = strength;
        this.hitPoints = hitPoints;
    }

    public String getName() {
        return name;
    }

    public int getStrength() {
        return strength;
    }

    public int getHitPoints() {
        return hitPoints;
    }

    @Override
    public List<String> write() {
        List <String> values = new ArrayList<>();
        values.add(1, this.name);
        values.add(2, "" + this.hitPoints);
        values.add(3, "" + this.strength);
        return values;
    }

    @Override
    public void read(List<String> savedValues) {
        List <String> values = new ArrayList<>();
        if (savedValues != null && savedValues.size() >0){
            this.name = savedValues.get(1);
            this.hitPoints = Integer.parseInt(savedValues.get(2));
            this.strength = Integer.parseInt(savedValues.get(3));
        }
    }

    @Override
    public String toString() {
        return "Player{" +
                "name='" + name + '\'' +
                ", strength=" + strength +
                ", hitPoints=" + hitPoints +
                '}';
    }




}

// --- Player.java --- 

package academy.learnprograming;

import java.util.ArrayList;
import java.util.List;

public class Player implements ISaveable {
    private String name;
    private String weapon;
    private int strength;
    private int hitPoints;

    public Player(String name, int strength, int hitPoints) {
        this.name = name;
        this.strength = strength;
        this.hitPoints = hitPoints;
        this.weapon = "Sword";
    }

    @Override
    public List<String> write() {
        List <String> values = new ArrayList<>();
        values.add(1, this.name);
        values.add(2, "" + this.hitPoints);
        values.add(3, "" + this.strength);
        values.add(4, this.weapon);
        return values;
    }

    @Override
    public void read(List<String> savedValues) {
        List <String> values = new ArrayList<>();
        if (savedValues != null && savedValues.size() >0){
        this.name = savedValues.get(1);
        this.hitPoints = Integer.parseInt(savedValues.get(2));
        this.strength = Integer.parseInt(savedValues.get(3));
        this.weapon = savedValues.get(4);
        }
    }

    @Override
    public String toString() {
        return "Player{" +
                "name='" + name + '\'' +
                ", weapon='" + weapon + '\'' +
                ", strength=" + strength +
                ", hitPoints=" + hitPoints +
                '}';
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getWeapon() {
        return weapon;
    }

    public void setWeapon(String weapon) {
        this.weapon = weapon;
    }

    public int getStrength() {
        return strength;
    }

    public void setStrength(int strength) {
        this.strength = strength;
    }

    public int getHitPoints() {
        return hitPoints;
    }

    public void setHitPoints(int hitPoints) {
        this.hitPoints = hitPoints;
    }




}
