Bank.java ------------------------------------------------------ * ------------------------------------------------------

import java.util.ArrayList;
 
public class Bank {
 
    private String name;
    private ArrayList<Branch> branches;
 
    public Bank(String name) {
        this.name = name;
        this.branches = new ArrayList<Branch>();
    }
 
    private Branch findBranch(String nameOfBranch) {
        for(int i=0; i<this.branches.size(); i++) {
            if(this.branches.get(i).getName().equals(nameOfBranch)){
                return this.branches.get(i);
            }
        }
        return null;
    }
 
    public boolean addBranch(String nameOfBranch) {
        Branch tempBranch = findBranch(nameOfBranch);
        if(tempBranch == null) {
            tempBranch = new Branch(nameOfBranch);
            this.branches.add(tempBranch);
            return true;
        } else {
            return false;
        }
    }
 
    public boolean addCustomer(String nameOfBranch, String nameOfCustomer, double transaction) {
        Branch tempBranch = findBranch(nameOfBranch);
        if(tempBranch != null) {
            return tempBranch.newCustomer(nameOfCustomer,transaction);
        } else {
            return false;
        }
    }
 
    public boolean addCustomerTransaction(String nameOfBranch, String nameOfCustomer, double transaction) {
        Branch tempBranch = findBranch(nameOfBranch);
        if(tempBranch != null) {
            return tempBranch.addCustomerTransaction(nameOfCustomer,transaction);
        } else {
            return false;
        }
    }
 
    public boolean listCustomers(String nameOfBranch, boolean printTransactions) {
        Branch tempBranch = findBranch(nameOfBranch);
        if(tempBranch != null && printTransactions) {
            System.out.println("Customer details for branch " + tempBranch.getName());
            for(int i=0; i<tempBranch.getCustomers().size(); i++) {
                System.out.println("Customer: " + tempBranch.getCustomers().get(i).getName() + "[" + (i+1) + "]");
                System.out.println("Transactions");
                for(int j=0; j<tempBranch.getCustomers().get(i).getTransactions().size(); j++) {
                    System.out.println("[" + (j+1) + "]  Amount " + tempBranch.getCustomers().get(i).getTransactions().get(j));
                }
            }
            return true;
        } else if(tempBranch != null) {
            System.out.println("Customer details for branch " + tempBranch.getName());
            for(int i=0; i<tempBranch.getCustomers().size(); i++) {
                System.out.println("Customer: " + tempBranch.getCustomers().get(i).getName() + "[" + (i+1) + "]");
            }
            return true;
        } else {
            return false;
        }
    }
}

Branch.java ------------------------------------------------------ * ------------------------------------------------------

import java.util.ArrayList;
 
public class Branch {
 
    private String name;
    private ArrayList<Customer> customers;
 
    public Branch(String name) {
        this.name = name;
        this.customers = new ArrayList<Customer>();
    }
 
    public String getName() {
        return name;
    }
 
    public ArrayList<Customer> getCustomers() {
        return customers;
    }
 
    private Customer findCustomer(String nameOfCustomer) {
        for(int i=0; i<this.customers.size(); i++) {
            if(this.customers.get(i).getName().equals(nameOfCustomer)){
                return this.customers.get(i);
            }
        }
        return null;
    }
 
    public boolean newCustomer(String nameOfCustomer, double initialTransaction) {
        Customer tempCustomer = findCustomer(nameOfCustomer);
        if(tempCustomer == null) {
            tempCustomer = new Customer(nameOfCustomer, initialTransaction);
            this.customers.add(tempCustomer);
            return true;
        } else {
            return false;
        }
    }
 
    public boolean addCustomerTransaction(String nameOfCustomer, double transaction) {
        Customer tempCustomer = findCustomer(nameOfCustomer);
        if(tempCustomer != null) {
            tempCustomer.addTransaction(transaction);
            return true;
        } else {
            return false;
        }
    }
}

Customer.java ------------------------------------------------------ * ------------------------------------------------------

import java.util.ArrayList;
 
public class Customer {
 
    private String name;
    private ArrayList<Double> transactions;
 
    public Customer(String name, double initialTransaction) {
        this.name = name;
        this.transactions = new ArrayList<Double>();
        this.transactions.add(initialTransaction);
    }
 
    public String getName() {
        return name;
    }
 
    public ArrayList<Double> getTransactions() {
        return transactions;
    }
 
    public void addTransaction(double transaction) {
        this.transactions.add(transaction);
    }
}
